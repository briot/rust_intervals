# Install
#    cargo install --force cargo-make cargo-fuzz

[config]
default_to_workspace = false

[tasks.default]
alias = "workflow"

[tasks.workflow]
# Do not run "coverage" as it forces recompilation all the time
dependencies = [ "test-all", "format", "clippy", "doc", "fuzz" ]

[tasks.test-all]
dependencies = ["test-all-features", "test-nostd" ]

[tasks.test-all-features]
command = "cargo"
args = ["test", "--all-features"]

[tasks.test-nostd]
command = "cargo"
args = ["test", "--no-default-features"]

[tasks.coverage]
dependencies = ["codecov-clean"]
env = { "CARGO_INCREMENTAL" = "0", "RUSTFLAGS" = "-Cinstrument-coverage", "LLVM_PROFILE_FILE" = "cargo-test-%p-%m.profraw" }
run_task = "codecov-grcov"

[tasks.codecov-grcov]
dependencies = [ "test-all-features" ]
command = "grcov"
args = [".", "-s", ".", "--binary-path", "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/debug/", "-t",  "html", "--branch", "--ignore-not-existing", "-o", "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/debug/coverage/"]

[tasks.codecov-clean]
script_runner = "@shell"
script = "rm -f *.profraw"

[tasks.doc]
command = "cargo"
args = [ "doc" ]

[tasks.fuzz]
toolchain = "nightly"
install_crate = "cargo-fuzz"
command = "cargo"
args = ["fuzz", "run", "fuzz_target_1", "--", "-max_total_time=10", "-max_len=1000"]

[tasks.clippy]
command = "cargo"
args = ["clippy", "--all-features"]
